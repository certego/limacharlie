---
- hosts: scale_db
  remote_user: root
  vars:
    limacharlie_master: 10.132.48.191
    cluster_name: lc_cluster
    cluster_seeds: "127.0.0.1"
  tasks:
    #==========================================================================
    # Setup the firewall.
    #==========================================================================
    - include: tasks/firewall.yaml
    #==========================================================================
    # Install Requirements
    #==========================================================================
    - name: install python-apt
      apt: name=python-apt
    #==========================================================================
    # Install JRE
    #==========================================================================
    - name: install jre
      apt: name=default-jre-headless
    #==========================================================================
    # Install Cassandra
    #==========================================================================
    - name: add cassandra repo
      apt_repository: repo="deb http://debian.datastax.com/community stable main" state=present
    - name: add cassandra repo key
      apt_key: url=http://debian.datastax.com/debian/repo_key state=present
    - name: install cassandra
      apt: name=cassandra=2.2.3 update_cache=yes
    #==========================================================================
    # Configure Cassandra
    #==========================================================================
    - name: set cassandra cluster name
      lineinfile:
        dest: /etc/cassandra/cassandra.yaml
        regexp: '^cluster_name: .*'
        line: "cluster_name: {{ cluster_name }}"
        state: present
      register: cluster_name
    - name: set cassandra cluster seeds
      lineinfile:
        dest: /etc/cassandra/cassandra.yaml
        regexp: '          - seeds: .*'
        line: '          - seeds: "{{ cluster_seeds }}"'
        state: present
    - name: restart cassandra if necessary
      service: name=cassandra state=restarted enabled=yes
      when: cluster_name.changed
    - name: make sure cassandra is running
      service: name=cassandra state=started enabled=yes